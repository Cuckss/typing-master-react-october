// Pallav, [21-10-2023 09:01 PM]
// (<code className='words'>
//                             {
//                                 wordsArray.map((word, index) => (
//                                     <span className='word' ref={wordsSpanRef[index]}>
//                                         {
//                                             word.split('').map((char) => (
//                                                 <span>{char}</span>
//                                             ))
//                                         }
//                                     </span>
//                                 ))
//                             }
//                         </code>)
//                 }
//                 <input
//                     type="text"
//                     className='hidden-input'
//                     onKeyDown={handleUserInput}
//                     //the reference of the input element will be present inside the inputref
//                     ref={inputRef}
//                 />


// const focusInput = () => {
//         inputRef.current.focus()
//     }

// Pallav, [21-10-2023 09:05 PM]
// const handleUserInput = (e) => {
//         if (!testStart) {
//             startTimer()
//             setTestStart(true)
//         }


//         // Get the current word's reference
//         const currentWordRef = wordsSpanRef[currentWordIndex].current;
//         const allCurrentChars = wordsSpanRef[currentWordIndex].current.childNodes

//         // retrieves all the child nodes (individual characters) of the current word from the wordsSpanRef array
//         if (currentWordRef) {
//             //logic for space
//             if (e.keyCode === 32) {//keycode for space - 32

//                 let correctCharsInWord = wordsSpanRef[currentWordIndex].current.querySelectorAll('.correct')

//                 if (correctCharsInWord.length === allCurrentChars.length) {
//                     setCorrectWords(correctWords + 1) //entair word typed correctly ready to move to next word
//                 }

//                 if (allCurrentChars.length <= currentCharIndex) {
//                     //remove cursor from last place in a node
//                     allCurrentChars[currentCharIndex - 1].classList.remove('current-right')
//                 } else {
//                     setMissedChars(missedChars + (allCurrentChars.length - currentCharIndex)) // gives how many chars missed
//                     //remove cursor from inbetween of node
//                     allCurrentChars[currentCharIndex].classList.remove('current')
//                 }

//                 wordsSpanRef[currentWordIndex + 1].current.childNodes[0].className = 'current';//cursor visible at every first letter of word

//                 setCurrentCharIndex(0) //repeat from 0 if jump to nextword
//                 setCurrentWordIndex(currentWordIndex + 1)  //if space happen jump to next word.
//                 return;
//             }
//         }

//         //logic for backspace
//         if (e.keyCode === 8) { // keycode for backspace - 8
//             if (currentCharIndex !== 0) {

//                 if (allCurrentChars.length === currentCharIndex) {

//                     //removing wrong lettters
//                     if (allCurrentChars[currentCharIndex - 1].className.includes('extra')) {
//                         allCurrentChars[currentCharIndex - 1].remove();
//                         allCurrentChars[currentCharIndex - 2].className += ' current-right'//cursor moving back
//                     } else {
//                         allCurrentChars[currentCharIndex - 1].className = 'current'
//                     }

//                     setCurrentCharIndex(currentCharIndex - 1)
//                     return;
//                 }

//                 allCurrentChars[currentCharIndex].className = ''
//                 allCurrentChars[currentCharIndex - 1].className = 'current'
//                 setCurrentCharIndex(currentCharIndex - 1)
//             }

//             return;
//         }

//         if (currentCharIndex === allCurrentChars.length) {
//             let Span = document.createElement('span')
//             Span.innerText = e.key;
//             Span.className = 'incorrect extra current-right';
//             wordsSpanRef[currentWordIndex].current.append(Span);
//             setCurrentCharIndex(currentCharIndex + 1);

//             allCurrentChars[currentCharIndex - 1].classList.remove('current-right')
//             setExtraChars(extraChars + 1) //counting extra chars for WPM
//             return;
//         }

//         // Compare the typed character with the expected character
//         if (e.key === allCurrentChars[currentCharIndex].innerText) {
//             allCurrentChars[currentCharIndex].className = "correct"; // Mark character as correct
//             setCorrectChars(correctChars + 1) //counting correct chars or accuracy
//         } else {
//             allCurrentChars[currentCharIndex].className = "incorrect"; // Mark character as incorrect
//             setIncorrectChars(incorrectChars + 1)
//         }

// Pallav, [21-10-2023 09:05 PM]
// //cursor move left to right
//         if (currentCharIndex + 1 === allCurrentChars.length) {
//             allCurrentChars[currentCharIndex].className += ' current-right' // Mark the next character as current
//         }
//         else {
//             allCurrentChars[currentCharIndex + 1].className = 'current' // Mark the next character as current
//         }

//         setCurrentCharIndex(currentCharIndex + 1) // Move to the next character
//     }